#summary Semantic Entity Resolution Vocabulary (SERV)

= Semantic Entity Resolution Vocabulary =

===November 1, 2009===

*Editor:* 
 Michel Dumontier - Carleton University

*Authors:*
 Alexander De Leon - Carleton University 

 Peter Ansell - Queensland University

 Marc-Alexandre Nolin - Universite de Laval


Copyright Â© 2009 Michel Dumontier.

This work is licensed under a [http://creativecommons.org/licenses/by/1.0/ Creative Commons License]. This copyright applies to the SERV Specification and accompanying documentation and does not apply to SERV data formats, ontology terms, or technology.

==Introduction==
Building a stable network of linked data is hard when URIs and/or URI patterns change over time. However, most entities are typically denoted by a unique identifier within some dataset. If datasets could be cataloged, we could generate unique identifiers for these as well. So, by combining the dataset identifier and the entity identifier, one can generate a location-independent entity identifier.

Having a location-independent identifier is important because much of the world's data is not currently available as linked data, and we don't know what is the original data provider's URI will actually be, when they get around to providing an RDF-based resolution service. Regardless, people to make statements about these entities and also have them discovered. Moreover, information about entities comes in all shapes in sizes - from HTML documents to XML, to RDF/N3 and RDF/XML. By additionally specifying the format in which information is made available, semantic web agents can mine the network of their preferred linked data and discover new knowledge.

==Objective==
The purpose of the Semantic Entity Resolution Vocabulary (SERV) is to facilitate the representation of entities contained in namespace-identified datasets, which are specifically the subject of documents which can be automatically constructed from URL patterns involving the entity identifier, and optionally the namespace.


==SERV at a glance==


prefix dc: <http://purl.org/dc/terms/>

prefix serv: <http://semanticscience.org/serv:>

prefix foaf: <http://xmlns.com/foaf/0.1/> 

prefix skos: <http://www.w3.org/2004/02/skos/core>

prefix sioc: <http://rdfs.org/sioc/ns#>




[http://semanticscience.googlecode.com/svn/trunk/wiki/serv_overview_diagram.png]




==Ontology==
[http://semanticscience.googlecode.com/svn/trunk/wiki/serv.owl SERV OWL Ontology]

==Example==
[http://semanticscience.googlecode.com/svn/trunk/wiki/serv_example.owl SERV example]



===foaf:Agent===
{{{ 
 rdfs:label [string]    # title [ns:id]
 dc:identifier [string] # id

 foaf:name [string]     # the agent's name [e.g. Bio2RDF]
 foaf:mbox [string]     # the agent's email address for contact/notification
 foaf:homepage [url]    # the agent's homepage [e.g. http://bio2rdf.org]                                         
}}}


===serv:Namespace===
{{{
 rdfs:subClassOf [sioc:Space] 
 rdfs:label [string]                     # title [ns:id]
 dc:identifier [string]                  # id

 dc:replaces [serv:Namespace]            # for superceding namespaces [e.g. registry:kegg replaces nar:kegg]
 skos:narrower [serv:Namespace]          # for aggregation namespaces [e.g. kegg 'has narrower' kegg_ligand]
 serv:source [foaf:Agent]                # the source/publisher of the namespace (e.g. Registry, NAR, GO)
 serv:dataset [serv:Dataset]             # the dataset to which this namespace applies 

 a serv:OfficialRegistryNamespace        # all namespaces that are not replaced, are official
}}}



===serv:Dataset===
{{{
 rdfs:subClassOf [sioc:Container]
 rdfs:label [string]                     # title [ns:id]
 dc:identifier [string]                  # id

 dc:title [string]                       # a brief summary of the resource [e.g. UniProt]
 dc:description [string]                 # a more elaborate description 
 dc:subject [url|ns:id|string]           # a curated subject heading [e.g. protein]
 dc:publisher [foaf:Agent]               # link to the original/primary publisher [E.g. UniProt Consortium]
 dc:references [serv:Dataset]            # for linked data cloud
 foaf:homepage [url]                     # the homepage of the resource [e.g. http://uniprot.org]
 serv:id_example [string]                # an identifier in the dataset [e.g. 12345] 
 serv:id_specification [regex]           # a regular expression to validate the identifier against
}}}

===serv:Entity===
A serv:entity is a named resource in the dataset, but is not a document.
{{{
 rdfs:subClassOf [sioc:Item]
 rdfs:label [string]                     # title [ns:id]
 dc:identifier [string]                  # id
 serv:part_of [serv:Dataset]             # the dataset that this item is part of
}}}

===serv:Resolver===
Provides some resource specified with a URL regex for a given resource with a particular namespace in different formats
{{{
 rdfs:label [string]                     # title [ns:id]
 dc:identifier [string]                  # id
 serv:resolves [serv:Namespace]          # a resolver resolves one or more preferred namespaces
 serv:resolves_to [serv:Document]        # the URI of the document that the resolver points to after applying regex   
 dc:publisher [foaf:Agent]               # the resolver's publisher [e.g. Bio2RDF is the publisher of its RDF resolver]
}}}
{{{
 serv:URIResolver rdfs:subClassOf serv:Resolver
   serv:uri_pattern [uri regex]          # A regular expression for the constructing the URI, 
                                           using variables $ns for the namespace and $id for the identifier 
                                           [e.g. http://bio2rdf.org/$ns:$id]
}}}


{{{
 serv:SPARQLEndpoint
   serv:sparql_endpoint [url]              # SPARQL endpoint URL [e.g. http://geneid.bio2rdf.org/sparql]
   serv:query_parameter_name [string]      # the name of the SPARQL query parameter
   serv:graph_parameter_name [string]      # the name of the default graph parameter
   serv:graph [uri]                        # Default graph URI
   serv:fileformat_parameter_name [string] # the name of the fileformat parameter
   serv:file_format [string]               # specifies the output file format
                                           ["auto","rdfxml","n3","xml","json","html"]
}}}

==serv:Document==
{{{
 rdfs:label [string]                     # title [ns:id]
 dc:identifier [string]                  # id
 dc:publisher[foaf:Agent]                # the publisher of the document
 rdfs:subClassOf [foaf:Document]         
 rdfs:subClassOf [sioc:Item]

 serv:availability [string]              ["public"|"see license"] 
 dc:license [url]                        # a document that provides usage rights
 dc:source [uri|serv:Resolver]           # for derivative works: the original source of this data

 dc:fileFormat[string]                   # the document MIME-type ["text/html",etc]
 rdf:type [URI]                          [HTMLDocument, XMLDocument, RDFXMLDocument, OWLXMLDocument, etc]
 serv:is_about [serv:Entity]             # identifies the entity that is the subject of the document
 serv:is_about [serv:Dataset]            # identifies the dataset that the document is about
}}}


==serv:Statistics==
{{{
 rdfs:label [string]                    # title [identifier]
 dc:identifier [string]                 # id
 serv:records [integer]                 # number of entries in the core namespace
 serv:topics [integer]                  # number of unique entities
 serv:triples [integer]                 # number of unique statements
 serv:size [integer]                    # of bytes the file contains
 dc:source [Document|Dataset]           # the document/dataset for which the statistics were compiled
}}} 
 