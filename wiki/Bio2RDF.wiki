#summary The Bio2RDF project aims to facilitate biological knowledge discovery
#labels bio2rdf,documentation,normalization

= Introduction =

The Bio2RDF project aims to transform silos of bioinformatics data into a distributed platform for biological knowledge discovery. Bio2RDF creates rich axiomatic descriptions of biological entities by representing biological knowledge using the RDF/OWL Semantic Web languages. Further, by leveraging Semantic Web technologies, it becomes possible to seamlessly integrate diverse biological data and enables queries across distributed knowledge bases. Thus, large scale data integration is achieved by i) *syntactic* and ii) *semantic* normalization.

*i) Syntactic Normalization*

_Entity Naming_

The first step of the syntactic normalization procedure involves applying a naming scheme that normalizes all resources in the Bio2RDF network. Normalization enables a reproducible mechanism for accessing resources in the Bio2RDF network and establishing relationships between them (i.e. link them together).  To join the linked data network, a data provider such as Bio2RDF provides HTTP-based resolvable identifiers, that is to say, a rich description is obtained when placing the identifier in your web browser. Bio2RDF identifiers are given by the following URI pattern:

{{{
http://bio2rdf.org/<namespace>:<identifier> 
}}} 

`<namespace>` is a short name that uniquely identifies the source (dataset/database). A full list of 1829 namespaces is provided at [http://www.freebase.com/view/user/bio2rdf/default_domain/bm FreeBase]. `<identifier>` is the original database identifier. For instance, the gene identified by the number 15275 in the NCBI Gene Database (namespace = geneid) is now represented as:

{{{
http://bio2rdf.org/geneid:15275
}}}

The Bio2RDF URI scheme is not only useful for naming data resources which have been imported into the Bio2RDF network, but also for naming the classes and relations found in the source or Bio2RDF ontologies. For example, the class bio2rdf:Protein has the following name:

{{{
http://bio2rdf.org/bio2rdf_resource:Protein
}}}



_Entity Labels and Descriptions_

Each resource should contain the following annotation: 

i.	rdfs:label – A Bio2RDF generated label containing a title followed by the identifier. Used by convention in most RDF browsers to render the name of resource instead of using its URI.
{{{
title [namespace:identifer]
}}}

ii.	dc:identifier – a string that contains the identifier using the following pattern 
{{{
<namespace>:<identifier>
}}}
 
iii.	dc:title – a human readable title as it appears in the source data.

iv.  dc:description (optional) – when available, a textual description of the resource.

v. rdfs:isDefinedBy - a relation between the entity and the record that defines it.
{{{
 <entity_uri> rdfs:isDefinedBy <record_uri>
}}}

_Entity Typing_

Entity typing (e.g. making assertions about the class membership of the entity) is key to effectively answer questions. Many ontologies organize concepts into hierarchies that support queries at various levels on ontological granularity (e.g. if a Transcription Factor is a type of Protein, then querying for all proteins would give all the transcription factors). Individuals are declared as instances of a class using rdf:type, while more specific classes are specified using rdfs:subClassOf. 

_Entity-Entity Relations_

Relations between entities should be specified using the terminology from the dataset. For instance, in RDFizing a table from "mydataset" with two columns "id","function", we express each row in the table as :

{{{
 id_namespace:id my_resource:function function_namespace:function_id .
}}}

_Entity-Literal Relations_

Relations between literal attributes (e.g. strings, numbers) are traditionally expressed as XML literals in linked data, but this precludes further description (e.g. how they were obtained or what kind of unit of measurement was used) and categorization of these literals (whether they are textual descriptions or measurements). Thus, Bio2RDF aims to represent literals as instantiated types such that they may be further referred to by having bone-fide URIs and where the literal value is captured using bio2rdf:has_value datatype relation.

{{{
 protein_namespace:id my_resource:descriptor my_resource:descriptor_id.
 my_resource:descriptor_id rdf:type my_resource:thistype .
 my_resource:descriptor_id bio2rdf:value "the literal value"^^xsd:string .
}}}

The Bio2RDF schema defines the following relations:
  # bio2rdf:url   – the HTML page showing the original data.
  # bio2rdf:image – An image of the entity.
  # bio2rdf:value - The literal value of some text / measurement value, etc


*ii) Semantic Normalization*

Bio2RDF attempts to unify knowledge produced by different datasources by asserting a set of basic relations and basic classes. 

The basic types include (but not limited to)

 * Object
  * Gene
  * Protein
  * DNA
  * RNA

 * Process
  * Reaction
  * Pathway
 
Basic relations include (but not limited to)
 * hasPart/hasProperPart
 * hasParticipant/hasAgent

== Resources ==
 * [http://quebec.bio2rdf.org/download Data Downloads]
 * [http://www.freebase.com/view/user/bio2rdf/public/sparql SPARQL endpoints]
 * [http://bio2rdf.wiki.sourceforge.net/ RDFizer cookbooks]
 * [http://bio2rdf.blogspot.com/ Bio2RDF Blog]
 * [http://www.slideshare.net/search/slideshow?q=bio2rdf Presentations]
 * [http://groups.google.ca/group/bio2rdf Mailing List]

== Publications ==
 * François Belleau, Marc-Alexandre Nolin, Nicole Tourigny, Philippe Rigault and Jean Morissette. [http://dx.doi.org/10.1016/j.jbi.2008.03.004 JBI - Bio2RDF: Towards a mashup to build bioinformatics knowledge systems]. 2008. Journal of Biomedical Informatics 41:5 p706-716.
 * Marc-Alexandre Nolin, Peter Ansell, François Belleau, Kingsley Idehen, Philippe Rigault, Nicole Tourigny, Paul Roe, James M Hogan, Michel Dumontier. [http://dumontierlab.com/pdf/2008_ISWC_SWC_Bio2RDF.pdf Bio2RDF Network Of Linked Data]. 2008. International Semantic Web Conference (ISWC2008): Semantic Web Challenge.