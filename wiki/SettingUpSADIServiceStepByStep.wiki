#A step-by-step summary of setting up and running a SADI service in Java, assuming you have had no prior experience with the involved tools by Leonid Chepelev.

= Requirements =

You will need the following components.
1. Eclipse IDE for Java developers
2. Java JDK
3. Sadi service skeleton

= Setting Up the Environment =

Install the Java JDK and extract the Eclipse IDE.
Within the Eclipse configurations file, eclipse.ini, you will need to add the path to the JDK, so you will need to add the following.
{{{
-vm
-path/to/the/jdk/jdkexecutable.exe
}}}

For windows, the jdkexecutable.exe will be javaw.exe within the bin folder of the JDK installation.

Further, you will need the Maven plugin installed for Eclipse. Within Eclipse, go to Help>Install New Software...  Within the dialogue that appears, you will need to specify the repository with which to work. As of June 2010, the repository has been at http://m2eclipse.sonatype.org/sites/m2e . Follow the wizard and complete the installation; it might take a few minutes.

Now, you will need to add the configuration file for Maven. If you are working in Windows, the configuration file is placed into the C:\Users\Username\.m2 folder, and is called settings.xml. The following contents should work.

{{{
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
  <localRepository/>
  <interactiveMode/>
  <usePluginRegistry/>
  <offline/>
  <pluginGroups>
    <pluginGroup>org.mortbay.jetty</pluginGroup>
  </pluginGroups>
  <servers/>
  <mirrors/>
  <proxies/>
  <profiles/>
  <activeProfiles/>
</settings>
}}}

Now, you should be ready to actually start with the creation of the SADI service from the skeleton.

= Creating a Sample Service =

In order to create the service, you will first need to download and extract the sadi-service-skeleton file provided on the SADI framework website. Next, within the Eclipse IDE, you will need to File>Import... the project and follow the dialogue to General>Import Existing Project from the root directory of the SADI service skeleton you have just extracted. If you are in the correct directory, the project should appear in the list.

Next, we would need to generate the SADI service code. To do this, you need to go to Run>Run Configurations... and select "generate sadi service" from the Maven build menu. The fields should be now filled out with the necessary information. You will need to indicate the Service Name, Service Class, Input and Output Classes. These should be ideally taken from an ontology somewhere


= Sample Code =

{{{

    String namespaceuri = "http://semanticscience.org/projects/sces/stuff#";
    String hasSMILES = "hasSMILES";
    String hbondcount = "hBondDonorCount";
    Property smilesproperty = ResourceFactory.createProperty(namespaceuri, hasSMILES);
    String smilesstring = input.getProperty(smilesproperty).getString();
    Property hbondcountproperty = ResourceFactory.createProperty(namespaceuri, hbondcount);
    output.getModel().add(ResourceUtils.reachableClosure(input));
    String thevalueofthis = "Always Seven";
    output.addProperty(hbondcountproperty, thevalueofthis);

}}}